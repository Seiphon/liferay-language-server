{
	"checkPossibleKeys": false,
	"keys": [
		{
			"comment": "The Bundle-ActivationPolicy specifies how the framework should activate the bundle once started.",
			"key": "Bundle-ActivationPolicy",
			"values": "lazy"
		},
		{
			"comment": "The Bundle-Activator header specifies the name of the class used to start and stop the bundle.",
			"key": "Bundle-Activator",
			"values": ""
		},
		{
			"comment": "The categories this bundle belongs to, can be set through the BundleCategory annotation.",
			"key": "Bundle-Category",
			"values": "cat1,cat2"
		},
		{
			"comment": "The Bundle-ClassPath header defines a comma-separated list of JAR file path names or directories (inside the bundle) containing classes and resources. The full stop (`'.'` `\\u002E`) specifies the root directory of the bundle's JAR. The full stop is also the values",
			"key": "Bundle-Classpath",
			"values": ""
		},
		{
			"comment": "Recommended to provide the framework vendor's contact address.",
			"key": "Bundle-ContactAddress",
			"values": ""
		},
		{
			"comment": "The Bundle-Copyright header contains the copyright specification for this bundle. Can be set with the BundleCopyright annotation.",
			"key": "Bundle-Copyright",
			"values": ""
		},
		{
			"comment": "The Bundle-comment header defines a short comment of this bundle.",
			"key": "Bundle-comment",
			"values": ""
		},
		{
			"comment": "Lists the bundle developers according to the Maven bundle-developers pom entry.",
			"key": "Bundle-Developers",
			"values": ""
		},
		{
			"comment": "The Bundle-DocURL headers must contain a URL pointing to documentation about this bundle.",
			"key": "Bundle-DocURL",
			"values": ""
		},
		{
			"comment": "The _optional_ Bundle-Icon header provides a list of URLs to icons representing this bundle in different sizes. The URLs are interpreted as relative to the bundle.",
			"key": "Bundle-Icon",
			"values": ""
		},
		{
			"comment": "The Bundle-License header provides an optional machine readable form of license information.",
			"key": "Bundle-License",
			"values": ""
		},
		{
			"comment": "The Bundle-Localization header contains the location in the bundle where localization files can be found. The default value is OSGI-INF/l10n/bundle.",
			"key": "Bundle-Localization",
			"values": "OSGI-INF/l10n/bundle"
		},
		{
			"comment": "The Bundle-ManifestVersion is always set to `2`, there is no way to override this.",
			"key": "Bundle-ManifestVersion",
			"values": "2"
		},
		{
			"comment": "The Bundle-Name header defines a readable name for this bundle. This should be a short, human-readable name that can contain spaces.",
			"key": "Bundle-Name",
			"values": ""
		},
		{
			"comment": "The Bundle-NativeCode header contains a specification of native code libraries contained in this bundle.",
			"key": "Bundle-NativeCode",
			"values": ""
		},
		{
			"comment": "The Bundle-RequiredExecutionEnvironment contains a comma-separated list of execution environments that must be present on the OSGi framework. See Execution Environment on page 44. _This header is deprecated_.",
			"key": "Bundle-RequiredExecutionEnvironment",
			"values": ""
		},
		{
			"comment": "The Bundle-SCM header provides an optional machine readable form of information about the source code of the bundle. This header is purely informational and must not be processed by the OSGi Framework.",
			"key": "Bundle-SCM",
			"values": ""
		},
		{
			"comment": "The Bundle-SymbolicName header specifies a non-localizable name for this bundle. The bundle symbolic name together with a version must identify a unique bundle though it can be installed multiple times in a framework. The bundle symbolic name should be based on the reverse domain name convention.",
			"key": "Bundle-SymbolicName",
			"values": "com.acme.daffy"
		},
		{
			"comment": "The Bundle-UpdateLocation header specifies a URL where an update for this bundle should come from. If the bundle is updated, this location should be used, if present, to retrieve the updated JAR file.",
			"key": "Bundle-UpdateLocation",
			"values": ""
		},
		{
			"comment": "The Bundle-Vendor header contains a human-readable comment of the bundle vendor.",
			"key": "Bundle-Vendor",
			"values": ""
		},
		{
			"comment": "The Bundle-Version header specifies the version of this bundle. _The default value is 0.0.0_.",
			"key": "Bundle-Version",
			"values": ""
		},
		{
			"comment": "The DynamicImport-Package header contains a comma-separated list of package names that should be dynamically imported when needed.",
			"key": "DynamicImport-Package",
			"values": ""
		},
		{
			"comment": "The Export-Package header contains a declaration of exported packages.",
			"key": "Export-Package",
			"values": ""
		},
		{
			"comment": "Deprecated.",
			"key": "Export-Service",
			"values": ""
		},
		{
			"comment": "The Fragment-Host header defines the host bundles for this fragment.",
			"key": "Fragment-Host",
			"values": ""
		},
		{
			"comment": "The Import-Package header declares the imported packages for this bundle.",
			"key": "Import-Package",
			"values": ""
		},
		{
			"comment": "Deprecated.",
			"key": "Import-Service",
			"values": "org.osgi.service.log.LogService"
		},
		{
			"comment": "Specifies that a bundle provides a set of Capabilities.",
			"key": "Provide-Capability",
			"values": ""
		},
		{
			"comment": "The Require-Bundle header specifies that all exported packages from another bundle must be imported, effectively requiring the public interface of another bundle.",
			"key": "Require-Bundle",
			"values": "com.acme.chess"
		},
		{
			"comment": "Specifies that a bundle requires other bundles to provide a capability.",
			"key": "Require-Capability",
			"values": ""
		},
		{
			"comment": "",
			"key": "Web-ContextPath",
			"values": "/frontend-js-web"
		}
	]
}